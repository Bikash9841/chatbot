{"version":3,"sources":["images/hface.png","components/HumanMessage.jsx","images/logo.png","components/BotMessage.jsx","components/ChatBox.jsx","App.js","index.js"],"names":["HumanMessage","text","className","src","hpp","alt","BotMessage","botmsg","botpp","ChatBox","useState","setText","msges","setMsges","setBotmsg","branch","setBranch","icon","setIcon","useEffect","fetch","then","response","json","data","msg","alert","onClick","e","preventDefault","method","body","JSON","stringify","content","class","map","idx","onSubmit","type","placeholder","value","onChange","target","autoFocus","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAAe,MAA0B,kC,OCiB1BA,EAbM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,4BAAID,MAEN,qBAAKC,UAAU,KAAf,SACE,qBAAKC,IAAKC,EAAKC,IAAI,eCXZ,MAA0B,iCCgB1BC,EAbI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpB,OACE,sBAAKL,UAAU,iBAAf,UACE,qBAAKA,UAAU,KAAf,SACE,qBAAKC,IAAKK,EAAOH,IAAI,WAEvB,qBAAKH,UAAU,SAAf,SACE,4BAAIK,U,OCiHGE,EAnHC,WAAM,MAEIC,mBAAS,IAFb,mBAEbT,EAFa,KAEPU,EAFO,OAKMD,mBAAS,IALf,mBAKbE,EALa,KAKNC,EALM,OAQQH,mBAAS,IARjB,mBAQbH,EARa,KAQLO,EARK,OAWQJ,mBAAS,IAXjB,mBAWbK,EAXa,KAWLC,EAXK,OAcIN,mBAAS,IAdb,mBAcbO,EAda,KAcPC,EAdO,KAgBpBC,qBAAU,WACRC,MAAM,wCAAD,OAAyCL,IAC3CM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLV,EAAUU,EAAKC,UAElB,CAACV,IAEJI,qBAAU,WACK,UAATF,EACFS,MAAM,sDACY,UAATT,EACTS,MACE,wEAEgB,SAATT,GACTS,MAAM,wDAEP,CAACT,IAEJ,IAOMU,EAAU,SAACC,GAEfA,EAAEC,iBACFT,MAAM,wCAAyC,CAC7CU,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,QAASjC,MAG7BA,IAGHY,EAAS,GAAD,mBAAKD,GAAL,CAAYX,EAAMM,KAC1BI,EAAQ,MAIZ,OACE,mCACE,qBAAKT,UAAU,SAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBAAKC,IAAKK,EAAOH,IAAI,WAEvB,sBAAKH,UAAU,QAAf,UACE,+CACA,8CAEF,qBAAKA,UAAU,UACf,mBAAGiC,MAAM,mBAAmBR,QAAS,kBAAMT,EAAQ,YACnD,mBAAGiB,MAAM,eAAeR,QAAS,kBAAMT,EAAQ,YAC/C,mBAAGiB,MAAM,qBAAqBR,QAAS,kBAAMT,EAAQ,gBAGzD,cAAC,IAAD,UACE,qBAAKhB,UAAU,YAAf,SACE,qBAAKA,UAAU,WAAf,SAEGU,EAAMwB,KAAI,SAACX,EAAKY,GACf,OAAKA,EAAM,GAAK,IAAM,EACb,cAAC,EAAD,CAAcpC,KAAMwB,GAAUY,GAE9B,cAAC,EAAD,CAAY9B,OAAQkB,GAAUY,YAM/C,sBAAKnC,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,sBAAMoC,SAAUX,EAAhB,SACE,uBACEY,KAAK,OACLrC,UAAU,eACVsC,YAAY,YACZC,MAAOxC,EACPyC,SAAU,SAACd,GAAD,OAhET,SAACA,GAChBjB,EAAQiB,EAAEe,OAAOF,OACjBzB,EAAUY,EAAEe,OAAOF,OA8DYC,CAASd,IAC1BgB,WAAS,QAIf,qBAAK1C,UAAU,OAAf,SACE,mBAAGiC,MAAM,qBAAqBR,QAASA,iB,MCvGtCkB,MARf,WACE,OACE,qBAAK3C,UAAU,MAAf,SACA,cAAC,EAAD,OCDJ4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3ef96260.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hface.808f4dd2.png\";","import React from \"react\";\nimport hpp from \"../images/hface.png\";\n\n// the parameter is prop..\nconst HumanMessage = ({ text }) => {\n  return (\n    <div className=\"bmsg-container\">\n      <div className=\"msg\">\n        <p>{text}</p>\n      </div>\n      <div className=\"pp\">\n        <img src={hpp} alt=\"logo\"></img>\n      </div>\n    </div>\n  );\n};\n\nexport default HumanMessage;\n","export default __webpack_public_path__ + \"static/media/logo.1f431167.png\";","import React from \"react\";\nimport botpp from \"../images/logo.png\";\n\nconst BotMessage = ({ botmsg }) => {\n  return (\n    <div className=\"bmsg-container\">\n      <div className=\"pp\">\n        <img src={botpp} alt=\"logo\"></img>\n      </div>\n      <div className=\"bo-msg\">\n        <p>{botmsg}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default BotMessage;\n","import React, { useEffect, useState } from \"react\";\nimport HumanMessage from \"./HumanMessage\";\nimport BotMessage from \"./BotMessage\";\nimport botpp from \"../images/logo.png\";\nimport ScrollableFeed from \"react-scrollable-feed\";\n\n// --------------------------------Chatbox is inspired from the TODO-List in displaying the messages..\n\nconst ChatBox = () => {\n  // state for the input text by the user\n  const [text, setText] = useState(\"\");\n\n  // array of text input by the user as well as bot used to display as a message in UI\n  const [msges, setMsges] = useState([]);\n\n  // state for the bot message sent from python\n  const [botmsg, setBotmsg] = useState(\"\");\n\n  // state to fetch data from random branch (user ko input anusar ko branch hunxa)\n  const [branch, setBranch] = useState(\"\");\n\n  // state for the icons\n  const [icon, setIcon] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`https://nlp-botty.herokuapp.com/bmsg/${branch}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setBotmsg(data.msg);\n      });\n  }, [branch]);\n\n  useEffect(() => {\n    if (icon === \"phone\") {\n      alert(\"i am not quite ready for voice call..Let's chat !!\");\n    } else if (icon === \"video\") {\n      alert(\n        \"Agh! My face not as pretty as yours..But my handwriting is good :) !\"\n      );\n    } else if (icon === \"info\") {\n      alert(\"I am chatbot.I answer your query on harry potter !\");\n    }\n  }, [icon]);\n\n  const onChange = (e) => {\n    setText(e.target.value);\n    setBranch(e.target.value);\n  };\n  // practise\n\n  // --------------after clicking the sent button user inputs are saved in array(msges)\n  const onClick = (e) => {\n    // --------to submit via Enter button, we use 'onSubmit' and to prevent from refreshing page automatically on submisson,we use preventdefault\n    e.preventDefault();\n    fetch(\"https://nlp-botty.herokuapp.com/creat\", {\n      method: \"POST\",\n      body: JSON.stringify({ content: text }),\n    });\n\n    if (!text) {\n    } else {\n      // ---------------------------------TO ADD THE USER INPUT IN ARRAY ,WE USE SPREAD OPERATOR----->(IMPORTANT!!!!!!!)\n      setMsges([...msges, text, botmsg]);\n      setText(\"\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"center\">\n        <div className=\"container\">\n          <div className=\"center-h\">\n            <div className=\"header\">\n              <div className=\"bot-profile\">\n                <img src={botpp} alt=\"logo\"></img>\n              </div>\n              <div className=\"Title\">\n                <h1>Hello There !</h1>\n                <p>Active Now</p>\n              </div>\n              <div className=\"icons\"></div>\n              <i class=\"fas fa-phone-alt\" onClick={() => setIcon(\"phone\")}></i>\n              <i class=\"fas fa-video\" onClick={() => setIcon(\"video\")}></i>\n              <i class=\"fas fa-info-circle\" onClick={() => setIcon(\"info\")}></i>\n            </div>\n          </div>\n          <ScrollableFeed>\n            <div className=\"center-mb\">\n              <div className=\"msg-body\">\n                {/*------------------------------------- displaying the list of user inputs */}\n                {msges.map((msg, idx) => {\n                  if ((idx + 1) % 2 !== 0) {\n                    return <HumanMessage text={msg} key={idx} />;\n                  } else {\n                    return <BotMessage botmsg={msg} key={idx} />;\n                  }\n                })}\n              </div>\n            </div>\n          </ScrollableFeed>\n          <div className=\"userinput\">\n            <div className=\"box\">\n              <form onSubmit={onClick}>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Type here\"\n                  value={text}\n                  onChange={(e) => onChange(e)}\n                  autoFocus\n                />\n              </form>\n            </div>\n            <div className=\"sent\">\n              <i class=\"far fa-paper-plane\" onClick={onClick}></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ChatBox;\n","import ChatBox from './components/ChatBox';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <ChatBox />   \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}